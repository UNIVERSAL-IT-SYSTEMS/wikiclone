This is a guide for upgrading since GNOME 2.32.x to GNOME 3.8.x
== Introduction ==

=== General changes ===

Please see the [http://library.gnome.org/misc/release-notes/3.8/ GNOME 3.8 Release Notes] for what is new in this major release of GNOME. Current users of GNOME 2 will also want to take a glance at the release notes for [http://library.gnome.org/misc/release-notes/3.0/ 3.0], [http://library.gnome.org/misc/release-notes/3.2/ 3.2], [http://library.gnome.org/misc/release-notes/3.4/ 3.4] and [http://library.gnome.org/misc/release-notes/3.6/ 3.6]. 

GNOME 3 includes two desktop modes: 
* Standard: this mode uses {{Package|gnome-base/gnome-shell}} without enabled extensions and looks and behaves '''completely''' different from GNOME 2 releases. You can also enable extensions provided by {{Package|gnome-extra/gnome-shell-extensions}} or from other packages in this mode to get the behavior you prefer. For example, some extensions provided by {{Package|gnome-extra/gnome-shell-extensions}} will let you to have an applications menu or a places one.
* Classic: this mode uses {{Package|gnome-extra/gnome-shell-extensions}} to get a similar appearance and behavior to GNOME 2.

The choice of desktop mode is done by choosing the desired session at the login screen, and both modes need 3D graphics capabilities, otherwise a fallback mode relying on software rendering will be used. Both modes are incompatible with {{Package|x11-wm/compiz}}.

There is a [https://live.gnome.org/GnomeShell/Tour quick tour] of standard mode's GNOME Shell available on the GNOME website. For an in-depth guide to using GNOME Shell, see [https://live.gnome.org/GnomeShell/CheatSheet the GNOME Shell cheat sheet]. You can also open the documentation provided by {{Package|gnome-extra/gnome-getting-started-docs}} to see more documentation about the new GNOME Shell experience (i.e: <code>yelp /usr/share/help/C/gnome-help/getting-started.page</code>).

GNOME Shell at first may feel alienating and limiting to an experienced GNOME 2 user. We strongly encourage users to persist and use it for a few days; those who take the time to get used to GNOME Shell's behavior usually will love it and don't want to go back to a GNOME 2-like desktop environment, if you still doesn't like it, you can try to enable some of the available extensions while running Standard mode before finally switching to Classic one.

=== General configurability and extensions ===

GNOME 3 is designed to ''appear'' significantly less configurable than GNOME 2. For example, by default there is no easily discoverable GUI for changing the Gtk+ theme. Many configuration settings are hidden, but can still be changed using the {{Package|gnome-extra/gnome-tweak-tool}} GUI, or from gsettings (can be explored using <code>dconf-editor</code>, part of {{Package|gnome-base/dconf}}) or gconf (can be explored using <code>gconf-editor</code>, part of {{Package|gnome-extra/gconf-editor}}). Discussion of most of these settings is outside the scope of this guide. 

GNOME Shell's behavior can be significantly altered using [https://live.gnome.org/GnomeShell/Extensions extensions]. Gentoo packages the extensions from the official GNOME repository as {{Package|gnome-extra/gnome-shell-extensions}}. GNOME Shell comes with a browser plugin that allows users to install extensions from the [http://www.gentoo.org/ https://extensions.gnome.org/] web interface; there are also numerous developers publishing extensions on various third-party websites, which come with their own installation instructions.

Gentoo uses <code>eselect gnome-shell-extensions</code> from {{Package|app-admin/eselect-gnome-shell-extensions}} to manage system defaults that control whether extensions that were installed system-wide (i.e. in {{Path|/usr/share/gnome-shell/extensions}}) should be enabled. Run the following to list all '''installed''' extensions and their descriptions:
{{RootCmd|eselect gnome-shell-extensions list -v}}
Newly-installed system-wide extensions start out disabled by default and can be enabled by default for all users using

{{RootCmd|eselect gnome-shell-extensions enable alternative-status-menu@gnome-shell-extensions.gcampax.github.com apps-menu@gnome-shell-extensions.gcampax.github.com window-list@gnome-shell-extensions.gcampax.github.com}}

Defaults managed by <code>eselect gnome-shell-extensions</code> can be overridden on a per-user basis using the [https://extensions.gnome.org/ extensions.gnome.org] web interface, via <code>gnome-tweak-tool</code> (''Shell Extensions'' tab), or from the command line using <code>gsettings</code> from {{Package|dev-libs/glib}}. For example, to load altermative-status, apps-menu and window-list extensions, and disabling all other extensions, a user can run 

{{Cmd|gsettings set org.gnome.shell enabled-extensions '["alternative-status-menu@gnome-shell-extensions.gcampax.github.com", "apps-menu@gnome-shell-extensions.gcampax.github.com", "window-list@gnome-shell-extensions.gcampax.github.com"]'}}

to enable alternative-status, apps-menu and window-list extensions (and disabling all others!) for the current user.

{{Important|The code quality of extensions is highly variable. Some extensions contain memory leaks and others can render GNOME completely unusable. Gentoo cannot offer support for problems caused by third-party extensions.}}

== Installation ==
=== Using gnome/systemd subprofile ===

People are highly encouraged to switch to the ''<code>desktop/gnome/systemd</code>'' subprofile as it includes settings that will make the update easier (as it sets proper defaults for USE flags and masking to prevent dependency blockers and therefore provides a better desktop experience). 

You can use {{RootCmd|eselect profile list}} to see the available profiles and {{RootCmd|eselect profile set default/linux/amd64/13.0/desktop/gnome/systemd}} for setting the proper profile.

If you still refuse to use gnome subprofile you will need to ensure you maintain certain USE flags enabled in sync to prevent ugly dependency blocker issues:
{{File|/etc/portage/package.use|Sync USE flags between packages|<pre>
sys-apps/systemd gudev introspection keymap 
sys-fs/eudev gudev hwdb introspection keymap 
>=sys-fs/udev-171 gudev hwdb introspection keymap 
>=virtual/udev-171 gudev hwdb introspection keymap 
</pre>
}}

And many other changes

=== Required software ===
==== PulseAudio ====

GNOME 3 requires {{Package|media-sound/pulseaudio}} for audio support. Ensure that you have the ''<code>pulseaudio</code>'' USE flag enabled globally (it will be enabled by default if you use the ''<code>desktop/gnome</code>'' portage profile). For troubleshooting PulseAudio problems, see [http://www.pulseaudio.org/wiki/Documentation documentation on pulseaudio.org] . 

==== systemd ====

GNOME 3.8 requires systemd to be '''running''' to get it working properly, otherwise, you will get broken power management and multiseat handling, and also some more problems because upstream has moved away from the obsolete consolekit to logind (that needs systemd to be running to work).

You '''must''' follow the [[systemd]] guide to migrate from openRC+udev to it. Systemd will be needed while running GNOME, then, you can safely upgrade GNOME packages and install systemd stuff either before, after or at the same time.

=== Recommended software===
==== GDM ====

Even if you can still login in GNOME using any other login manager, using {{Package|gnome-base/gdm}} will give you better integration. It will be installed by {{Package|gnome-base/gnome}} meta package and, to run it at startup, you can enable the service as follows:
{{RootCmd|systemctl enable gdm}}

=== Obsolete software ===

The following packages are no longer needed or are replaced by others. Portage will take care of migrating most of them automatically in most cases, but, depending on the packages listed in your world file and other setups customizations, manual intervention is needed to remove old entries:
{| class="wikitable"
|-
! Old !! Replacement !! Observations
|-
| <dev-lang/vala:0.20 || {{Package|dev-lang/vala:0.20}} || New enough versions of portage will resolve the dependency blocker automatically but, if you hit blocking issue due this, running ''<code>emerge -1 vala:0.20</code>'' should solve it
|-
| {{Package|gnome-base/gnome-applets}} || || ''None'' of GNOME 2 applets can be used in GNOME 3. Some traditional applet functionality can be replicated using third-party GNOME Shell extensions.
|-
| {{Package|gnome-extra/bug-buddy}} || {{Package|app-admin/abrt}} || 
|-
| {{Package|gnome-extra/evolution-exchange}} || {{Package|gnome-extra/evolution-ews}} || 
|}

=== Installing Gnome 3.8 ===

You should use {{Package|gnome-base/gnome}} if possible to ensure you get a better experience. If you were running {{Package|gnome-base/gnome-light}} and want to migrate away to the other meta you can run the following before updating your system:
{{RootCmd|emerge --select gnome --deselect gnome-light --deselect gnome-utils}}

And, finally, upgrade:
{{RootCmd|emerge -avuDN --keep-going world}}

== Most noticeable changes for current GNOME users ==

=== NetworkManager will use upstream plugin to handle configs ===

When running Systemd, NetworkManager will use upstream plugin to handle configs (called 'keyfile'), then, you probably will need to reconfigure your network settings. If you have problems with this migration (like NetworkManager failing to start), you need to verify that old 'ifnet' plugin is not referred from /etc/NetworkManager/NetworkManager.conf

=== Languages and encodings ===

GNOME 3 obtains user language settings from {{Package|sys-apps/accountsservice}}. The language can be set in GNOME from the ''My Account'' entry in the upper right corner menu. Alternatively, you can directly edit AccountsService user files. For example, to have user <code>jrandom</code> use British English, you can (as root) edit {{Path|/var/lib/AccountsService/users/jrandom}} so it reads the following: 

{{File|/var/lib/AccountsService/users/jrandom|Simple example of an AccountsService user file|<pre>
[User]
Language=en_GB.utf8
</pre>
}}

But, normally, you won't need to change this if wanting to use the same language as the used system wide.

=== Keyboard layouts and input methods ===

GNOME 3.8 does not use traditional {{Path|xorg.conf}} keyboard layout settings. Instead, keyboard layouts and input methods are configured via <code>ibus</code> which is integrated into GNOME Shell. 

To add a keyboard layout, open System Settings (or {{Path|gnome-control-center}} from the terminal) and go to ''Region & Language → Input Sources''.  That dialog will also tell you how to change keyboard layout to switch between multiple keyboard layouts.

=== Touchpad and other input device customization ===

Apart of the settings you can change in "Control Center -> Mouse", if you have "disable touchpad while typing" selected in "Control Center -> Mouse", the touchpad will be disabled for 1 second after a keyboard key is pressed. In GNOME 2, this interval was 500 milliseconds. If you like to disable the touchpad while typing, but prefer the shorter timeout interval like in GNOME 2, you can emerge {{Package|gnome-base/gnome-settings-daemon}} with the <code>short-touchpad-timeout</code> USE flag enabled. 

GNOME 3 allows setting a custom command for advanced customization of input device settings. For example, suppose that you want to configure your touchpad to enable two-finger scrolling (both vertical and horizontal) ''and'' edge scrolling (vertical only). You could set a new GNOME input device hotplug script using the terminal: 
{{Cmd|cp /usr/share/gnome-settings-daemon-3.0/input-device-example.sh ~/input-device.sh
|chmod +x ~/input-device.sh
|gsettings set org.gnome.settings-daemon.peripherals.input-devices hotplug-command ~/input-device.sh}}

and create the following file: 
{{File|input-device.sh||<pre># If the device is a touchpad ...
if [[ -z "${device#*TouchPad*}" ]]; then
	# ... enable two-finger scrolling (vertical and horizontal) ...
	xinput set-prop "${device}" "Synaptics Two-Finger Scrolling" 1 1
	# ... and edge scrolling (vertical only, no horizontal, no coasting) ...
	xinput set-prop "${device}" "Synaptics Edge Scrolling" 1 0 0
fi
# All further processing will be disabled if $retval == 0
exit $retval</pre>}}

{{Note|If the custom hotplug command does not terminate with exit value 0, <code>gnome-settings-daemon</code> will set its own settings on the input device, likely clobbering the settings that the hotplug command had changed.}}

If, for whatever reason, you want to completely prevent GNOME 3 from automatically modifying your mouse and touchpad settings (note that this will ''also'' prevent custom input hotplug commands, such as {{Path|input-device.sh}} above, from modifying mice and touchpads!), you can run the following: 
{{Cmd|gsettings set org.gnome.settings-daemon.plugins.mouse active false}}

=== Configure Monitors and Displays ===

GNOME 3.8 uses xrandr to setup the monitors.

Try to configure your displays with {{Cmd|gnome-control-center display}}

To apply the settings as a system-wide default, copy <code>~/.config/monitors.xml</code> to <code>/etc/gnome-settings-daemon/xrandr/monitors.xml</code>

=== Suspend/Hibernate items in status menu===

GNOME Shell 3.8 always shows a ''Power Off'' menu item by default in the upper-right corner menu. The ''Suspend'' menu item becomes visible after clicking on the upper right corner menu and holding down the <code>Alt</code> key. Laptops can also be suspended simply by shutting the lid. 

To change status menu default items, you should probably try the alternative-status-menu extension. To do so, emerge {{Package|gnome-extra/gnome-shell-extensions}} and run
{{RootCmd|eselect gnome-shell-extensions enable 'alternative-status-menu@gnome-shell-extensions.gnome.org}}
to enable the extension for all users by default, or use <code>gnome-tweak-tool</code> (''Shell Extensions'' tab) to enable it on a per-user basis.

This will offer you separated "Suspend" and "Hibernate" menu items.

=== Suspend on laptop lid close ===

GNOME 3 will, by default, suspend a laptop when the lid is closed. If you do not like this behavior, you can change it via the <code>gnome-tweak-tool</code> GUI (''Shell'' tab), or by using <code>gsettings</code> you can only turn off the screen when laptop lid is closed on AC power from the terminal: 

{{Cmd|gsettings set org.gnome.settings-daemon.plugins.power lid-close-ac-action blank}}

One of the most common reasons for not wanting to suspend on laptop lid close is to carry a laptop to another room without losing the network connection. To do so, you can install {{Package|gnome-extra/office-runner}}, which allows temporarily inhibiting GNOME's suspend-on-lid-close behavior for up to 10 minutes. 

=== Interaction with tabs ===

Since GNOME 3.0, some applications stopped switching tabs when scrolling over them. This intended behavior by upstream actually covers at least {{Package|app-editors/gedit}}, {{Package|gnome-base/nautilus}} and {{Package|www-client/epiphany}}. This behavior will not be patched by the Gentoo GNOME team so if you find it annoying, please report it directly at the [http://bugzilla.gnome.org GNOME Bugzilla].

=== Interaction with windows ===

If you were used to move and resize windows using <code>Alt + Middle click</code>, GNOME 3.6 replaced the <code>Alt</code> key with the <code>Super</code> (Windows Logo) key. If you wish to change back to the old behavior, this can be done using <code>gnome-tweak-tool</code> (''Windows'' tab), or you can use the terminal to set Alt as modifier key for window interaction: 

{{Cmd|gsettings set org.gnome.desktop.wm.preferences mouse-button-modifier '<Alt>'}}

=== Interaction with notifications ===

For GNOME 3.8 this action has been updated to react to the force with which the pointer is pressed against the screen edge. Only a determined push will cause the Message Tray to open. This enhancement avoids accidental triggers and is quicker and more immediate. To open the tray usually moving mouse to the button and, either trying to move it even more down or sticking it there will work. You can also open the tray pressing <code><Super></code> key or clicking on notification shown when a new one arrives in Activities overview.

Also, notifications handling has changed a lot during GNOME 3 cycles [https://wiki.gnome.org/GnomeOS/Design/Whiteboards/Notifications [1<nowiki>]</nowiki>] [https://wiki.gnome.org/Design/SystemSettings/Notifications [2<nowiki>]</nowiki>]. Since some commonly used applications are still not using notifications in this way, they can be hard to use. To let this applications behave more similar to GNOME 2 you can use {{Package|gnome-extra/gnome-shell-extensions-topicons}} and, once you install that package, enable it as usual, for example:
{{RootCmd|eselect gnome-shell-extensions enable topIcons@adel.gadllah@gmail.com}}

=== Fonts ===

GNOME 3 uses {{Package|media-fonts/cantarell}} as its default font. Unfortunately, Cantarell currently only includes a subset of Latin and Cyrillic characters. Users of languages with alphabetic writing systems which are not yet covered by Cantarell will probably want to switch to another font, such as {{Package|media-fonts/dejavu}}. This can be done using <code>gnome-tweak-tool</code> (''Fonts'' tab), or you can set DejaVu (size 10) as the default font from the terminal: 

{{Cmd|gsettings set org.gnome.desktop.interface font-name 'DejaVu Sans 10'
|gsettings set org.gnome.desktop.interface document-font-name 'DejaVu Sans 10'
|gconftool-2 -s -t string /apps/metacity/general/titlebar_font 'DejaVu Sans Bold 10'}}

=== Icons on the desktop ===

In GNOME 3, {{Path|~/Desktop}} folder is simply treated as a normal folder with files instead of its contents being shown in the GNOME desktop. If you want to manage your desktop files like in GNOME 2, you can change the corresponding setting in the <code>gnome-tweak-tool</code> GUI (''Desktop'' tab), or use the <code>gsettings</code> command from the terminal to make Nautilus manage the desktop:

{{Cmd|gsettings set org.gnome.desktop.background show-desktop-icons true}}

This change is not needed if you are using GNOME Classical mode.

Currently, it's not possible to create launchers in desktop (see [https://bugzilla.gnome.org/show_bug.cgi?id=702587 upstream bug #702587]), as a workaround, you can try to copy existing launchers from /usr/share/applications to your ~/Desktop.

=== Logs of the session ===

If you were used to finding the logs of the current session in {{Path|~/.xsession-errors}} or {{Path|~/.cache/gdm/session.log}}, they are now directly logged by journald and, then, you will need to run <code>journalctl</code> to see them (see <code>man journalctl</code> for learning more about its usage).

== Troubleshooting == 
=== Getting backtraces ===

At first you need to review [http://www.gentoo.org/proj/en/qa/backtraces.xml‎ Gentoo documentation] for ensuring affected packages are built with debugging symbols. After that, you need to install {{Package|app-admin/abrt}} and enable its provided unit files to be run at boot time.

=== Gnome Shell crashed/hung... ===

Sometimes something fails and you can see GNOME hangs or crashes, for restarting <code>gnome-shell</code> you can press <code>Alt + F2</code> type <code>r</code> and press <code>ENTER</code>. If it doesn't work, you can try to switch to a console and run <code>killall -9 gnome-shell</code>. If still no luck, you can restart X completely running (in the case of gdm):
{{RootCmd|systemctl restart gdm}}

=== Unicode (i.e UTF-8) locale is needed ===

As reported in {{Bug|481168}} ([https://bugzilla.gnome.org/show_bug.cgi?id=698952 upstream bug#698952]), you need to use a UTF-8 locale or, otherwise, you will hit a lot of crashes.

=== Slow Gnome Shell on NVIDIA card ===

Sometimes people change nvidia settings using {{Package|media-video/nvidia-settings}}, this can lead to performace or other problems. Before reporting a issue, you should try to remove your changed settings to use defaults again. Settings are placed at <code>~/.nvidia-settings-rc</code>

=== Desktop unresponsive some seconds under heavy I/O load ===

Sometimes, under heavy I/O load (like while emerging or copying files), you could experience some stalls for a few seconds. You should consider using different IO Schedulers in your kernel and stick with the one performing better for you. Currently three are offered: cfq, deadline and bfq.

=== Can't see the mouse pointer after login ===

As reported in [https://bugzilla.gnome.org/show_bug.cgi?id=694758 upstream bug#694758], some people can see their mouse pointer is invisible for some time just after login in on a fresh reboot. Until a proper fix is found, you can disable cursor gnome-settings-daemon plugin to workaround this:
{{Cmd|gsettings set org.gnome.settings-daemon.plugins.cursor active false}}

This will prevent the mouse pointer to become invisible and not come back even not running a touchscreen.

=== Cannot terminate X even if I have configured xorg.conf to allow that ===

Gnome honors XKB options set on '''xorg.conf.d files''' if the user doesn't have any configuration yet, i.e. for new user accounts. Otherwise previous users configuration is respected. But please take care Gnome will read configurations files from /etc/X11/xorg.conf.d/, not from old style /etc/X11/xorg.conf file.

=== No way to set pin for SIM card unlocking ===

Upstream decided to stop starting automatically nm-applet ([https://bugzilla.gnome.org/show_bug.cgi?id=660044#c17 upstream bug #660044#c17] and, then, you will need to start it manually if you need to pass the pin for SIM card unlocking.

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:

* eva
* pacho
* tetromino

[[Category:GNOME]]
